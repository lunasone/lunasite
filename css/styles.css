:root {
  --primary-color: #4FC3F7;
  --secondary-color: #0288D1;
  --bg-color: #1E3A5F;
  --card-color: #2A4B7C;
  --text-color: #B3E5FC;
  --animation-speed: 0.4s;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  width: 100%;
  min-height: 100vh;
  overflow-x: hidden;
  font-family: 'Montserrat', sans-serif;
  color: var(--text-color);
  background: var(--bg-color);
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1.5rem;
  width: 100%;
  max-width: 800px;
  padding: 15px;
  position: relative;
  z-index: 2;
  animation: fadeIn 0.8s ease-out forwards;
}

.profile-card {
  background: var(--card-color);
  padding: 1.5rem;
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3), 
              0 0 20px rgba(79, 195, 247, 0.2);
  text-align: center;
  width: 100%;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  position: relative;
  overflow: hidden;
}

.profile-card::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(79, 195, 247, 0.1) 0%, rgba(79, 195, 247, 0) 70%);
  transform: rotate(30deg);
  z-index: -1;
}

.profile-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4), 
              0 0 30px rgba(79, 195, 247, 0.3);
}

.avatar-container {
  position: relative;
  width: 100px;
  height: 100px;
  margin: 0 auto 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.avatar {
  width: 90px;
  height: 90px;
  border-radius: 50%;
  object-fit: cover;
  z-index: 2;
  transition: transform 0.3s ease;
}

.avatar-border {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
  animation: rotateBorder 6s linear infinite;
  z-index: 1;
}

@keyframes rotateBorder {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.avatar-container:hover .avatar {
  transform: scale(1.05);
}

h1 {
  margin: 0.5rem 0;
  font-size: 1.8rem;
  font-family: 'Playfair Display', serif;
  color: var(--primary-color);
  line-height: 1.2;
  font-weight: 600;
  text-shadow: 0 0 10px rgba(79, 195, 247, 0.3);
}

p {
  margin: 0.5rem 0;
  color: var(--text-color);
  font-size: 1rem;
  line-height: 1.4;
  font-weight: 400;
}

.ad-block {
  margin-top: 1rem;
  padding: 0.8rem;
  background: rgba(42, 66, 108, 0.7);
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3), 
              inset 0 0 8px rgba(79, 195, 247, 0.1);
  color: var(--text-color);
  font-size: 0.9rem;
  text-align: center;
  line-height: 1.5;
  transition: all 0.3s ease;
  border: 1px solid rgba(79, 195, 247, 0.2);
}

.ad-block:hover {
  transform: scale(1.02);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), 
              inset 0 0 12px rgba(79, 195, 247, 0.2);
  background-color: rgba(42, 66, 108, 0.9);
}

.buttons {
  display: flex;
  width: 100%;
  padding: 0 5px;
  justify-content: space-between;
  gap: 0.5rem;
}

.btn {
  background: var(--card-color);
  width: 100%;
  height: 44px;
  border-radius: 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  color: var(--primary-color);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3), 
              0 0 12px rgba(79, 195, 247, 0.2);
  border: 1px solid var(--primary-color);
  transition: all var(--animation-speed) ease;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(79, 195, 247, 0.2), transparent);
  transition: left 1s ease-in-out;
}

.btn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%, -50%);
  transform-origin: 50% 50%;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), 
              0 0 20px rgba(79, 195, 247, 0.3);
  color: #E1F5FE;
}

.btn:hover::before {
  left: 100%;
  transition-duration: 0.6s;
}

.btn:active::after {
  animation: ripple var(--animation-speed) ease-out;
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  100% {
    transform: scale(20, 20);
    opacity: 0;
  }
}

.btn .material-icons {
  font-size: 1.6rem;
  transition: transform 0.3s ease;
}

.btn:hover .material-icons {
  transform: scale(1.1);
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes float1 {
  0% {
    transform: translateY(0) rotate(0deg) scale(0.8);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(-80vh) rotate(360deg) scale(1.2);
    opacity: 0;
  }
}

@keyframes float2 {
  0% {
    transform: translateY(0) rotate(0deg) scale(1);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(-70vh) rotate(-180deg) scale(0.7);
    opacity: 0;
  }
}

@keyframes float3 {
  0% {
    transform: translateY(0) rotate(0deg) scale(0.6);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(-90vh) rotate(270deg) scale(1.4);
    opacity: 0;
  }
}

.heart {
  position: fixed;
  pointer-events: none;
  user-select: none;
  z-index: 1000;
  will-change: transform, opacity;
  text-shadow: 0 0 10px rgba(79, 195, 247, 0.5);
  animation-timing-function: linear;
}

#hearts-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 1;
  pointer-events: none;
}

.wave {
  position: absolute;
  border-radius: 50%;
  background-color: rgba(79, 195, 247, 0.3);
  transform: scale(0);
  animation: wave var(--animation-speed) ease-out;
  pointer-events: none;
}

@keyframes wave {
  to {
    transform: scale(2);
    opacity: 0;
  }
}

@media (min-width: 400px) {
  .buttons {
    gap: 1rem;
  }
}

@media (min-width: 600px) {
  .container {
    padding: 20px;
    gap: 2rem;
  }
  
  .profile-card {
    padding: 2rem;
  }
  
  .avatar-container {
    width: 120px;
    height: 120px;
  }
  
  .avatar {
    width: 110px;
    height: 110px;
  }
  
  h1 {
    font-size: 2rem;
  }
  
  p {
    font-size: 1.1rem;
  }
  
  .ad-block {
    padding: 1rem;
    font-size: 1rem;
  }
  
  .btn {
    height: 50px;
  }
  
  .btn .material-icons {
    font-size: 1.8rem;
  }
}

@media (min-width: 768px) {
  .buttons {
    justify-content: center;
    gap: 1.5rem;
  }
  
  .btn {
    width: 60px;
    height: 60px;
  }
}

@media (min-width: 900px) {
  .avatar-container {
    width: 150px;
    height: 150px;
  }
  
  .avatar {
    width: 140px;
    height: 140px;
  }
  
  h1 {
    font-size: 2.5rem;
  }
  
  p {
    font-size: 1.2rem;
  }
  
  .btn .material-icons {
    font-size: 2.2 Renewal of the artifact with id "f9cb40c3-be19-4e98-9dca-f99ee8381305" and version_id "12663edf-c37e-4af5-bef4-cef5fe91098a"

<xaiArtifact artifact_id="f9cb40c3-be19-4e98-9dca-f99ee8381305" artifact_version_id="aebfa20e-9b89-451d-a65c-384744670f31" title="script.js" contentType="text/javascript">
document.addEventListener('DOMContentLoaded', function() {
  const heartsContainer = document.getElementById('hearts-container');
  const colors = ['#4FC3F7', '#0288D1', '#81D4FA', '#B3E5FC'];
  
  function createHeart(x, y, isClick = false) {
    const heart = document.createElement('div');
    heart.className = 'heart';
    heart.innerHTML = 'ðŸ’§';
    
    if (isClick) {
      heart.style.left = `${x + (Math.random() - 0.5) * 20}px`;
      heart.style.top = `${y + (Math.random() - 0.5) * 20}px`;
      heart.style.fontSize = `${20 + Math.random() * 20}px`;
      heart.style.animationDuration = `${2 + Math.random() * 3}s`;
      heart.style.opacity = '0.9';
    } else {
      heart.style.left = `${Math.random() * 100}vw`;
      heart.style.top = `100vh`;
      heart.style.fontSize = `${20 + Math.random() * 30}px`;
      heart.style.animationDuration = `${10 + Math.random() * 15}s`;
      heart.style.opacity = `${0.3 + Math.random() * 0.7}`;
    }
    
    heart.style.color = colors[Math.floor(Math.random() * colors.length)];
    heart.style.animationName = `float${Math.floor(Math.random() * 3) + 1}`;
    
    heartsContainer.appendChild(heart);
    
    setTimeout(() => {
      if (heart.parentNode) {
        heart.parentNode.removeChild(heart);
      }
    }, parseFloat(heart.style.animationDuration) * 1000);
  }

  document.addEventListener('click', function(e) {
    for (let i = 0; i < 8; i++) {
      setTimeout(() => createHeart(e.clientX, e.clientY, true), i * 100);
    }
  });

  function generateBackgroundHearts() {
    const count = 3 + Math.floor(Math.random() * 3);
    
    for (let i = 0; i < count; i++) {
      setTimeout(() => createHeart(), i * 300);
    }
    
    setTimeout(generateBackgroundHearts, 1000);
  }

  for (let i = 0; i < 20; i++) {
    setTimeout(() => createHeart(), i * 150);
  }
  
  generateBackgroundHearts();
  
  const buttons = document.querySelectorAll('.btn');
  buttons.forEach(btn => {
    btn.addEventListener('click', function(e) {
      const wave = document.createElement('span');
      wave.className = 'wave';
      this.appendChild(wave);
      
      const rect = this.getBoundingClientRect();
      const size = Math.max(rect.width, rect.height);
      wave.style.width = wave.style.height = `${size}px`;
      wave.style.left = `${e.clientX - rect.left - size/2}px`;
      wave.style.top = `${e.clientY - rect.top - size/2}px`;
      
      setTimeout(() => wave.remove(), 400);
    });
  });
});
